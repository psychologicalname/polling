'use client'

import { useState } from 'react';
import { FaTrash, FaPlus } from 'react-icons/fa';

// export const metadata = {
//   title: 'Create Poll',
//   description: 'Generated by create next app',
// }

export default function Home() {
  const [options, setOptions] = useState(['', '']);

  const handleOptionChange = (index, value) => {
    const newOptions = [...options];
    newOptions[index] = value;
    setOptions(newOptions);
  };

  const handleAddOption = () => {
    if (options.length < 5) {
      setOptions([...options, '']);
    }
  };

  const handleRemoveOption = (index) => {
    if (options.length > 2) {
      const newOptions = [...options];
      newOptions.splice(index, 1);
      setOptions(newOptions);
    }
  };

  return (
    <div className="flex flex-col items-center justify-center h-full py-14 bg-transparent dark:bg-gradient-to-r from-[#12c2e9] via-[#c471ed] to-[#f64f59]">
      <div className="bg-gray-100 dark:bg-white rounded-lg shadow-lg p-8 w-96">
        <h2 className="text-slate-800 text-4xl font-semibold mb-6">Create Poll</h2>

        <form>
          <div className="mb-6">
            <label htmlFor="title" className="text-slate-700 block text-xl font-medium mb-2">
              Title
            </label>
            <input
              type="text"
              id="title"
              name="title"
              className="text-slate-600 border border-gray-300 rounded px-3 py-2 w-full focus:outline-none focus:ring focus:ring-gray-300 focus:border-gray-500"
            />
          </div>

          <div className="mb-6">
            <label htmlFor="options" className="text-slate-700 block text-xl font-medium mb-2">
              Options <p className="text-base inline text-slate-500 tracking-wide">(minimum 2, maximum 5)</p>
            </label>

            {options.map((option, index) => (
              <div className="flex items-center mb-2" key={index}>
                <input
                  type="text"
                  value={option}
                  onChange={(e) => handleOptionChange(index, e.target.value)}
                  className="text-slate-600 border border-gray-300 rounded px-3 py-2 w-full focus:outline-none focus:ring focus:ring-gray-300 focus:border-gray-500"
                />
                {index === options.length - 1 && options.length < 5 && (
                  <button
                    type="button"
                    onClick={handleAddOption}
                    className="ml-2 bg-green-500 hover:bg-green-700 focus:bg-green-700 focus:outline-none border rounded p-2  transition ease-in-out delay-150 hover:scale-125 duration-300"
                  >
                    <FaPlus />
      
                  </button>
                )}
                {index > 1 && (
                  <button
                    type="button"
                    onClick={() => handleRemoveOption(index)}
                    className="ml-2 bg-red-500 hover:bg-red-700 focus:bg-red-700 focus:outline-none border rounded p-2 transition ease-in-out delay-150 hover:scale-125 duration-300"
                  >
                    <FaTrash />
                   
                  </button>
                )}
                
              </div>
            ))}
          </div>

          <div className="flex justify-start">
            <button
              type="button"
              className="bg-blue-500 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded focus:outline-none focus:shadow-outline"
            >
              Submit
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}
